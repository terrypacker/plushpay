package com.payyourself.trading.trade;

// Generated Apr 24, 2010 1:54:05 PM by Hibernate Tools 3.2.5.Beta

import com.payyourself.trading.trader.group.TraderGroup;
import java.util.Calendar;

/**
 * Trade generated by hbm2java
 */
public class Trade implements java.io.Serializable {

	private long tradeId;
	private TraderGroup buyerGroup;
	private TraderGroup sellerGroup;
	private Calendar dateCreated;
	private String status;

	public Trade() {
	}

	public Trade(TraderGroup buyerGroup, TraderGroup sellerGroup,
			Calendar dateCreated, String status) {
		this.buyerGroup = buyerGroup;
		this.sellerGroup = sellerGroup;
		this.dateCreated = dateCreated;
		this.status = status;
	}

	public long getTradeId() {
		return this.tradeId;
	}

	public void setTradeId(long tradeId) {
		this.tradeId = tradeId;
	}

	public TraderGroup getBuyerGroup() {
		return this.buyerGroup;
	}

	public void setBuyerGroup(TraderGroup buyerGroup) {
		this.buyerGroup = buyerGroup;
	}

	public TraderGroup getSellerGroup() {
		return this.sellerGroup;
	}

	public void setSellerGroup(TraderGroup sellerGroup) {
		this.sellerGroup = sellerGroup;
	}

	public Calendar getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Calendar dateCreated) {
		this.dateCreated = dateCreated;
	}

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	// The following is extra code specified in the hbm.xml files
	/**
	 * Return the mismatch between Buyer.buy and Seller.sell
	 * 
	 * We will remove this value from the Buyer.buy currency type buffer
	 * 
	 * @return
	 */
	public long getBuyerBuyMismatch() {
		return (this.buyerGroup.getCurrencyToBuy().getValue() - this.sellerGroup
				.getCurrencyToSell().getValue());

	}

	/**
	 * Return the mismatch between Buyer.sell and Seller.buy
	 * 
	 * This is used with SellerBuy Mismatch to compute the 
	 * value lost in trade from the Buyer.buy currency type buffer 
	 * due to exchange rate variances.
	 * @return
	 */
	public long getBuyerSellMismatch() {
		return (this.buyerGroup.getCurrencyToSell().getValue() - this.sellerGroup
				.getCurrencyToBuy().getValue());
	}

	/**
	 * Return the mismatch between Seller.buy and Buyer.sell
	 * 
	 * We will remove this value from the Seller.buy currency type buffer
	 * 
	 * @return
	 */
	public long getSellerBuyMismatch() {
		return (this.sellerGroup.getCurrencyToBuy().getValue() - this.buyerGroup
				.getCurrencyToSell().getValue());
	}

	/**
	 * Return the mismatch between Seller.sell and Buyer.buy
	 * 
	 * This is used with BuyerBuy Mismatch to compute the 
	 * value lost in trade from the Seller.sell currency type buffer 
	 * due to exchange rate variances.
	 * @return
	 */
	public long getSellerSellMismatch() {
		return (this.sellerGroup.getCurrencyToSell().getValue() - this.buyerGroup
				.getCurrencyToBuy().getValue());
	}
	// end of extra code specified in the hbm.xml files

}
